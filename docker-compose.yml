version: "3.4"

services:
  gateway:
    container_name: gateway
    image: nginx:alpine
    volumes:
      - ./gateway/_nginx.conf:/etc/nginx/_nginx.conf
    restart: always
    ports:
      - ${APP_PUBLIC_PORT}:80
    networks:
      - backend
    environment:
      NGINX_PUBLIC_IP: ${NGINX_PUBLIC_IP}
      APP_PUBLIC_PORT: ${APP_PUBLIC_PORT}
    command: sh -c "envsubst < /etc/nginx/_nginx.conf > /etc/nginx/nginx.conf && exec nginx -g 'daemon off;'"
  db:
    container_name: postgres_db
    #    user: root
    image: postgres:14.3
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      PGDATA: /var/lib/postgresql/data/${DB_DIR}
    volumes:
      - ./db/${DB_DIR}:/var/lib/postgresql/data/${DB_DIR}
## port to access from localhost during development (insecured)
    # ports:
    #   - ${DB_HOST_PORT}:5432
    restart: always
    networks:
      - backend
  app:
    container_name: app
    build:
      context: ./app
    image: app:1
    working_dir: /app
## command to keep the container on for remote development
#    command: bash -c "tail -f /dev/null"
    command: bash -c "uvicorn main:app --host 0.0.0.0 --port 8000 --reload" #
    environment:
      DATABASE_URL: postgresql://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}
      APP_SECRET_KEY: ${APP_SECRET_KEY}
    volumes:
      - ./app:/app
## port to access from localhost during development (insecured)
    # ports:
    #   - ${APP_HOST_PORT}:8000
    depends_on:
      - db
    restart: always
    networks:
      - backend

networks:
  backend:
  frontend: